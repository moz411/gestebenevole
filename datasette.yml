---
plugins:
  datasette-auth-passwords:
    admin_password_hash: pbkdf2_sha256$480000$6ceebc22c629866dd54eb367ab19b92d$1WMLaSAQvIXl+L+Bpml6TBXf0YYzCdZcMkR557B0lKY=
  datasette-render-xsls:
    max_rows: 10000
databases:
  gestebenevole:
    allow:
      id: admin
    queries:
      Prescriptions:
        hide_sql: true
        sql: >-
          SELECT prescription.date,
              patient.firstname, patient.lastname, patient.birth,
              user.name,
              consultation.location,
              prescription.qty,
              drugstore.name, 
              prescription.notes, prescription.posology, prescription.given 
          FROM prescription 
          LEFT JOIN drugstore ON prescription.drugstore = drugstore.id,
          consultation ON consultation.id = prescription.consultation,
          patient ON patient.id = consultation.patient,
          user ON user.id = consultation.healer
          WHERE 1=1;
      Orientations:
        hide_sql: true
        sql: >-
          SELECT orientation.date, 
              patient.firstname, patient.lastname, patient.birth,
              user.name AS healer, specialist.name AS specialist
          FROM orientation
          LEFT JOIN specialist ON orientation.specialist = specialist.id,
          consultation ON consultation.id = orientation.consultation,
          patient ON patient.id = consultation.patient,
          user ON user.id = consultation.healer
          WHERE 1=1;
      Couverture sociale:
        hide_sql: true
        sql: >-
          SELECT
            strftime('%Y', coverage.date) AS year,
            SUM(
              CASE
                WHEN coverage.current = "oui" THEN 1
                ELSE 0
              END
            ) AS "Oui",
            SUM(
              CASE
                WHEN coverage.current = "non" THEN 1
                ELSE 0
              END
            ) AS "Non",
            SUM(
              CASE
                WHEN coverage.current = "inprogress" THEN 1
                ELSE 0
              END
            ) AS "En cours"
          FROM
            coverage
          GROUP BY
            strftime('%Y', coverage.date);
      Evolution par pôle:
        hide_sql: true
        sql: >-
          SELECT
            strftime('%Y', consultation.date) AS year,
            SUM(
              CASE
                WHEN location = "ES" THEN 1
                ELSE 0
              END
            ) AS "ES",
            SUM(
              CASE
                WHEN location = "IPS" THEN 1
                ELSE 0
              END
            ) AS "IPS",
            SUM(
              CASE
                WHEN location = "Elancourt" THEN 1
                ELSE 0
              END
            ) AS "Elancourt"
          FROM
            consultation
          GROUP BY
            strftime('%Y', consultation.date);
      Répartition géographique:
        hide_sql: true
        sql: >-
          SELECT
            strftime('%Y', residency.date) AS year,
            SUM(
              CASE
                WHEN city.id = 1 THEN 1
                ELSE 0
              END
            ) AS "Bois d'Arcy",
            SUM(
              CASE
                WHEN city.id = 2 THEN 1
                ELSE 0
              END
            ) AS "Coignières",
            SUM(
              CASE
                WHEN city.id = 3 THEN 1
                ELSE 0
              END
            ) AS "Elancourt",
            SUM(
              CASE
                WHEN city.id = 4 THEN 1
                ELSE 0
              END
            ) AS "Fontenay-le-Fleury",
            SUM(
              CASE
                WHEN city.id = 5 THEN 1
                ELSE 0
              END
            ) AS "Guyancourt",
            SUM(
              CASE
                WHEN city.id = 6 THEN 1
                ELSE 0
              END
            ) AS "La Verrière",
            SUM(
              CASE
                WHEN city.id = 7 THEN 1
                ELSE 0
              END
            ) AS "Le-Mesnil-Saint-Denis",
            SUM(
              CASE
                WHEN city.id = 8 THEN 1
                ELSE 0
              END
            ) AS "Les Clayes-sous-Bois",
            SUM(
              CASE
                WHEN city.id = 9 THEN 1
                ELSE 0
              END
            ) AS "Magny-les-Hameaux",
            SUM(
              CASE
                WHEN city.id = 10 THEN 1
                ELSE 0
              END
            ) AS "Maurepas",
            SUM(
              CASE
                WHEN city.id = 11 THEN 1
                ELSE 0
              END
            ) AS "Montigny-le-Btx",
            SUM(
              CASE
                WHEN city.id = 12 THEN 1
                ELSE 0
              END
            ) AS "Plaisir",
            SUM(
              CASE
                WHEN city.id = 13 THEN 1
                ELSE 0
              END
            ) AS "Saint-Cyr-L'école",
            SUM(
              CASE
                WHEN city.id = 14 THEN 1
                ELSE 0
              END
            ) AS "Trappes",
            SUM(
              CASE
                WHEN city.id = 15 THEN 1
                ELSE 0
              END
            ) AS "Versailles",
            SUM(
              CASE
                WHEN city.id = 16 THEN 1
                ELSE 0
              END
            ) AS "Villepreux",
            SUM(
              CASE
                WHEN city.id = 17 THEN 1
                ELSE 0
              END
            ) AS "Voisins-le-Btx",
            SUM(
              CASE
                WHEN city.id = 18 THEN 1
                ELSE 0
              END
            ) AS "Les-Essarts-le-Roi",
            SUM(
              CASE
                WHEN city.id = 19 THEN 1
                ELSE 0
              END
            ) AS "Le-Perray-en-Yvelines",
            SUM(
              CASE
                WHEN city.id = 20 THEN 1
                ELSE 0
              END
            ) AS "Saint-Rémy-les-Chevreuses",
            SUM(
              CASE
                WHEN city.id = 21 THEN 1
                ELSE 0
              END
            ) AS "Rambouillet",
            SUM(
              CASE
                WHEN city.id = 22 THEN 1
                ELSE 0
              END
            ) AS "Autres 75",
            SUM(
              CASE
                WHEN city.id = 23 THEN 1
                ELSE 0
              END
            ) AS "Autres 78",
            SUM(
              CASE
                WHEN city.id = 24 THEN 1
                ELSE 0
              END
            ) AS "Autres 91",
            SUM(
              CASE
                WHEN city.id = 25 THEN 1
                ELSE 0
              END
            ) AS "Autres 92",
            SUM(
              CASE
                WHEN city.id = 26 THEN 1
                ELSE 0
              END
            ) AS "Autres 93",
            SUM(
              CASE
                WHEN city.id = 27 THEN 1
                ELSE 0
              END
            ) AS "Autres 94",
            SUM(
              CASE
                WHEN city.id = 28 THEN 1
                ELSE 0
              END
            ) AS "Autres 95",
            COUNT(city.id) as "Total"
          FROM
            residency
            INNER JOIN patient ON residency.patient = patient.id
            INNER JOIN city ON residency.city = city.id
            INNER JOIN accommodation ON residency.accommodation = accommodation.id
          GROUP BY
            strftime('%Y', residency.date);
      Domiciliation:
        hide_sql: true
        sql: >-
          SELECT
            strftime('%Y', residency.date) AS year,
            SUM(
              CASE
                WHEN accommodation.id = 1 THEN 1
                ELSE 0
              END
            ) AS "SDF",
            SUM(
              CASE
                WHEN accommodation.id = 2 THEN 1
                ELSE 0
              END
            ) AS "SDF avec domiciliation administrative",
            SUM(
              CASE
                WHEN accommodation.id = 3 THEN 1
                ELSE 0
              END
            ) AS "Hébergé famille",
            SUM(
              CASE
                WHEN accommodation.id = 4 THEN 1
                ELSE 0
              END
            ) AS "Hébergé autre",
            SUM(
              CASE
                WHEN accommodation.id = 5 THEN 1
                ELSE 0
              END
            ) AS "HUDA",
            SUM(
              CASE
                WHEN accommodation.id = 6 THEN 1
                ELSE 0
              END
            ) AS "CADA",
            SUM(
              CASE
                WHEN accommodation.id = 7 THEN 1
                ELSE 0
              END
            ) AS "FOYER",
            SUM(
              CASE
                WHEN accommodation.id = 8 THEN 1
                ELSE 0
              END
            ) AS "115-HOTEL",
            SUM(
              CASE
                WHEN accommodation.id = 9 THEN 1
                ELSE 0
              END
            ) AS "AUTRES",
            SUM(
              CASE
                WHEN accommodation.id = 10 THEN 1
                ELSE 0
              END
            ) AS "CHU"
          FROM
            residency
            INNER JOIN patient ON residency.patient = patient.id
            INNER JOIN city ON residency.city = city.id
            INNER JOIN accommodation ON residency.accommodation = accommodation.id
          GROUP BY
            strftime('%Y', residency.date);
      Patients par genre:
        hide_sql: true
        sql: >-
          SELECT
            strftime('%Y', (
              SELECT MAX(date)
              FROM consultation
              WHERE consultation.patient = patient.id
            )) AS year,
            SUM(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS "M",
            SUM(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS "F",
            SUM(CASE WHEN gender = 'A' THEN 1 ELSE 0 END) AS "A"
          FROM patient
          WHERE EXISTS (
            SELECT 1 FROM consultation WHERE consultation.patient = patient.id
          )
          GROUP BY year
          ORDER BY year;
      Patients par tranche d'âge:
        hide_sql: true
        sql: >-
          SELECT
            strftime('%Y', (
              SELECT MAX(date)
              FROM consultation
              WHERE consultation.patient = patient.id
            )) AS year,
            
            SUM(CASE
                  WHEN CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', birth) AS INTEGER) BETWEEN 0 AND 2 THEN 1
                  ELSE 0
                END) AS "0-2",
            SUM(CASE
                  WHEN CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', birth) AS INTEGER) BETWEEN 3 AND 10 THEN 1
                  ELSE 0
                END) AS "3-10",
            SUM(CASE
                  WHEN CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', birth) AS INTEGER) BETWEEN 11 AND 17 THEN 1
                  ELSE 0
                END) AS "11-17",
            SUM(CASE
                  WHEN CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', birth) AS INTEGER) BETWEEN 18 AND 29 THEN 1
                  ELSE 0
                END) AS "18-29",
            SUM(CASE
                  WHEN CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', birth) AS INTEGER) BETWEEN 30 AND 39 THEN 1
                  ELSE 0
                END) AS "30-39",
            SUM(CASE
                  WHEN CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', birth) AS INTEGER) BETWEEN 40 AND 49 THEN 1
                  ELSE 0
                END) AS "40-49",
            SUM(CASE
                  WHEN CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', birth) AS INTEGER) BETWEEN 50 AND 59 THEN 1
                  ELSE 0
                END) AS "50-59",
            SUM(CASE
                  WHEN CAST(strftime('%Y', 'now') AS INTEGER) - CAST(strftime('%Y', birth) AS INTEGER) > 59 THEN 1
                  ELSE 0
                END) AS "59+"

          FROM patient
          WHERE EXISTS (
            SELECT 1 FROM consultation WHERE consultation.patient = patient.id
          )
          GROUP BY year
          ORDER BY year;
      Consultations:
        hide_sql: true
        sql: >-
          SELECT
            consultation.id AS consultation_id,
            consultation.date AS consultation_date,
            patient.firstname,
            patient.lastname,
            patient.birth,
            consultation.location,
            user.name AS healer_name
          FROM consultation
          JOIN patient ON patient.id = consultation.patient
          JOIN user ON user.id = consultation.healer
          ORDER BY consultation.date DESC;
      Nombre de consultations:
        hide_sql: true
        sql: >-
          SELECT
            strftime('%Y', consultation.date) AS year,
            COUNT(consultation.id) AS count
          FROM
            consultation
            INNER JOIN patient ON consultation.patient = patient.id
          GROUP BY
            strftime('%Y', consultation.date);
      Consultations par patient:
        hide_sql: true
        sql: >-
          WITH visites_par_patient AS (
            SELECT
              strftime('%Y', date) AS year,
              patient,
              COUNT(*) AS nb_visites
            FROM consultation
            GROUP BY year, patient
          )
          SELECT
            year,
            SUM(CASE WHEN nb_visites = 1 THEN 1 ELSE 0 END) AS "1",
            SUM(CASE WHEN nb_visites = 2 THEN 1 ELSE 0 END) AS "2",
            SUM(CASE WHEN nb_visites = 3 THEN 1 ELSE 0 END) AS "3",
            SUM(CASE WHEN nb_visites = 4 THEN 1 ELSE 0 END) AS "4",
            SUM(CASE WHEN nb_visites >= 5 THEN 1 ELSE 0 END) AS "5+"
          FROM visites_par_patient
          GROUP BY year
          ORDER BY year;
      Consultations avec pharmacie:
        hide_sql: true
        sql: >-
          SELECT
            consultation.id AS consultation_id,
            consultation.date AS consultation_date,
            patient.firstname,
            patient.lastname,
            patient.birth,
            user.name AS healer_name,
            consultation.location,
            prescription.date AS prescription_date,
            prescription.qty,
            drugstore.name AS drug_name,
            prescription.notes,
            prescription.posology,
            prescription.given
          FROM prescription
          JOIN consultation ON consultation.id = prescription.consultation
          JOIN patient ON patient.id = consultation.patient
          JOIN user ON user.id = consultation.healer
          LEFT JOIN drugstore ON prescription.drugstore = drugstore.id
          ORDER BY consultation.date DESC;


